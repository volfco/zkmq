
    zkmq.

    rust zookeeper backed message queue. designed for low throughput, high durability, message queue using only
    zookeeper. messages also support filtering. the producer can set filters, and the client can chose to respect the
    filters.

    note: this is still experimental and in development. don't assume anything will work or the api will remain the same


    tasks are given a randomly generated ID and written into /dir/tasks/<task>. Once tree is written, insert message into
    /dir/queue.

    a worker will try and read the next message from /dir/queue. once it has a task, it will try and make a lock in
    /dir/tasks/<task>/claim. once the lock is in place, starts processing the task.

    a background thread will perform garbage collection at the interval configured in /dir/conf/task_gc_interval





    tree layout.

    /dir
      /queue                Pending Messages
        /<task>
        /<task>
        /<task>

      /tasks
        /<task>
          /state
            /inserted
            /claimed
          /data

      /consumers            Active Consumers
        /<id>
          /current          Current Task

      /conf
        /task_gc_interval
      /lock